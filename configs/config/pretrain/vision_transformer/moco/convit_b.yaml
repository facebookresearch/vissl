# @package _global_
config:
  VERBOSE: True
  LOG_FREQUENCY: 10
  TEST_ONLY: False
  TEST_MODEL: False
  SEED_VALUE: 0
  MULTI_PROCESSING_METHOD: forkserver
  HOOKS:
    PERF_STATS:
      MONITOR_PERF_STATS: True
      ROLLING_BTIME_FREQ: 313
      PERF_STAT_FREQUENCY: 10
    TENSORBOARD_SETUP:
      USE_TENSORBOARD: True
      FLUSH_EVERY_N_MIN: 20
  CHECKPOINT:
    DIR: "."
    AUTO_RESUME: True
    CHECKPOINT_FREQUENCY: 10
  DATA:
    NUM_DATALOADER_WORKERS: 5
    TRAIN:
      DATA_SOURCES: [disk_folder]
      DATASET_NAMES: [imagenet1k_folder]
      BATCHSIZE_PER_REPLICA: 128
      LABEL_TYPE: zero    # just an implementation detail. Label isn't used
      TRANSFORMS:
        - name: ImgReplicatePil
          num_times: 2
        - name: RandomResizedCrop
          size: 224
        - name: RandomHorizontalFlip
          p: 0.5
        - name: ImgPilColorDistortion
          strength: 1.0
        - name: ImgPilGaussianBlur
          p: 0.5
          radius_min: 0.1
          radius_max: 2.0
        - name: ToTensor
        - name: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      COLLATE_FUNCTION: cutmixup_collator
      COLLATE_FUNCTION_PARAMS: {
        "ssl_method": "moco",
        "mixup_alpha": 1.0, # mixup alpha value, mixup is active if > 0.
        "cutmix_alpha": 1.0, # cutmix alpha value, cutmix is active if > 0.
        "prob": 1.0, # probability of applying mixup or cutmix per batch or element
        "switch_prob": 0.5, # probability of switching to cutmix instead of mixup when both are active
        "mode": "batch", # how to apply mixup/cutmix params (per 'batch', 'pair' (pair of elements), 'elem' (element)
        "correct_lam": True, # apply lambda correction when cutmix bbox clipped by image borders
        "label_smoothing": 0.1, # apply label smoothing to the mixed target tensor
        "num_classes": 2 # number of classes for target
      }
      MMAP_MODE: True
      COPY_TO_LOCAL_DISK: False
      COPY_DESTINATION_DIR: /tmp/imagenet1k/
      DROP_LAST: True
  MODEL:
    GRAD_CLIP:
      USE_GRAD_CLIP: False
    TRUNK:
      NAME: vision_transformer
      VISION_TRANSFORMERS:
        IMAGE_SIZE: 224
        PATCH_SIZE: 16
        NUM_LAYERS: 12
        NUM_HEADS: 16
        HIDDEN_DIM: 1024
        MLP_DIM: 4096
        CLASSIFIER: token
        DROPOUT_RATE: 0
        ATTENTION_DROPOUT_RATE: 0
        DROP_PATH_RATE: 0.1 # stochastic depth dropout probability
      CONVIT:
        QKV_BIAS: False # Bias for QKV in attention layers.
        QK_SCALE: False # Scale
        N_GPSA_LAYERS: 10 # Number of gated positional self-attention layers
        CLASS_TOKEN_IN_LOCAL_LAYERS: False # Whether to add class token
        # Determines how much the positional attention is focused on the
        # patch of maximal attention. "Alpha" in the paper. Equivalent to
        # the temperature of positional attention softmax.
        LOCALITY_STRENGTH: 1.
        # Dimensionality of the relative positional embeddings * 1/3
        LOCALITY_DIM: 10
        # Whether to initialize the positional self-attention to be local
        # (equivalent to a convolution)
        USE_LOCAL_INIT: True
    HEAD:
      PARAMS: [
      ["mlp", {"dims": [1024, 4096, 128], "use_relu": True}],
      ]
    SYNC_BN_CONFIG:
      CONVERT_BN_TO_SYNC_BN: False
      SYNC_BN_TYPE: apex
      GROUP_SIZE: 8
    AMP_PARAMS:
      USE_AMP: True
      AMP_ARGS: {"opt_level": "O1"}
  LOSS:
    name: moco_loss
    moco_loss:
      embedding_dim: 128
      queue_size: 65536
      momentum: 0.999
      temperature: 0.2
  OPTIMIZER:
    name: adamw
    weight_decay: 0.3
    num_epochs: 300
    param_schedulers:
      lr:
        auto_lr_scaling:
          auto_scale: True
          base_value: 0.003
          base_lr_batch_size: 4096
        name: composite
        schedulers:
          - name: linear
            start_value: 0.0
            end_value: 0.003
          - name: cosine
            start_value: 0.003
            end_value: 0
        interval_scaling: [rescaled, rescaled]
        update_interval: step
        lengths: [0.1, 0.9]
  METERS:
    name: ""
  TRAINER:
    TRAIN_STEP_NAME: standard_train_step
  DISTRIBUTED:
    BACKEND: nccl
    NUM_NODES: 4
    NUM_PROC_PER_NODE: 8 # 1 GPU
    RUN_ID: "60215"
  MACHINE:
    DEVICE: gpu
