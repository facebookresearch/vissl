# @package _global_
config:
  VERBOSE: False
  LOG_FREQUENCY: 100
  TEST_ONLY: False
  TEST_MODEL: False
  SEED_VALUE: 0
  MULTI_PROCESSING_METHOD: forkserver
  DATA:
    TRAIN:
      DATA_SOURCES: [disk_filelist]
      DATASET_NAMES: [imagenet1k]
      BATCHSIZE_PER_REPLICA: 32
      LABEL_TYPE: sample_index
      TRANSFORMS:
        - name: ImgPilToPatchesAndImage
          crop_scale_image: [0.08, 1.0]   # default PyTorch
          crop_size_image: 224            # default PyTorch
          crop_scale_patches: [0.6, 1.0]
          crop_size_patches: 255          # default Jigsaw
          num_patches: 9
        - name: ColorJitter
          brightness: 0.4
          contrast: 0.4
          saturation: 0.4
          hue: 0.2
        - name: ImgPilRandomPhotometric
        - name: RandomGrayscale
          p: 0.2
        - name: RandomHorizontalFlip
        - name: ToTensor
        - name: Normalize
          mean: [0.485, 0.456, 0.406]
          std: [0.229, 0.224, 0.225]
      COLLATE_FUNCTION: "patch_and_image_collator"
      INPUT_KEY_NAMES: ["patches", "images"] # keys produced by data that are `inputs' to the model
      MMAP_MODE: True
      COPY_TO_LOCAL_DISK: True
      COPY_DESTINATION_DIR: /tmp/imagenet1k/
  TRAINER:
    TRAIN_STEP_NAME: standard
  METERS: null
  MODEL:
    TRUNK:
      NAME: resnet
      TRUNK_PARAMS:
        RESNETS:
          DEPTH: 50
    MULTI_INPUT_HEAD_MAPPING: ["patches", "images"]
    EVAL_FEATURES: [
        # "flatten" is the res5->avg->flatten feature from ResNet50
        ["patches", ["flatten"]], # feature layer to extract from second input "patches"
        ["images", ["flatten"]],  # feature layer to extract from first input "images"
    ]
    HEAD:
      PARAMS: [
        # head 0 that operates on patches
        [
            ["mlp", {"dims": [2048, 128], "use_bn": False, "use_relu": False}],
            ["siamese_concat_view", {"num_towers": 9}],
            ["mlp", {"dims": [1152, 128]}],
        ],
        # head 1 that operates on images. Linear projection.
          [
              ["mlp", {"dims": [2048, 128]}]
          ],
        ]
  CRITERION:
      name: nce_loss_with_memory
      ignore_index: -1
      NCE_LOSS:
        NORM_EMBEDDING: True
        TEMPERATURE: 0.07
        LOSS_WEIGHTS: [0.5, 0.5]  # relative weight of Patches=>Mem and Images=>Mem
        NORM_CONSTANT: -1
        NEGATIVE_SAMPLING_PARAMS:
          NUM_NEGATIVES: 32000
          TYPE: random
        MEMORY_PARAMS:
          MEMORY_SIZE: -1
          EMBEDDING_DIM: 128
          MOMENTUM: 0.5
          NORM_INIT: True
          UPDATE_MEM_ON_FORWARD: False
        UPDATE_MEM_WITH_EMB_INDEX: 1
  OPTIMIZER:
      name: sgd
      weight_decay: 0.0001
      momentum: 0.9
      # num_epochs: 200
      num_epochs: 800
      nesterov: False
      regularize_bn: False
      regularize_bias: False
      param_schedulers:
        lr:
          name: cosine
          start_value: 0.12   # LR for batch size 256*4
          end_value: 0.00012
          update_interval: epoch
  DISTRIBUTED:
    BACKEND: nccl
    NUM_NODES: 4
    RUN_ID: xxxxxxxxxxxxxxxx
    NUM_PROC_PER_NODE: 8
    INIT_METHOD: tcp
    NCCL_DEBUG: True
    BROADCAST_BUFFERS: True
  MACHINE:
    NUM_DATALOADER_WORKERS: 8
    DEVICE: gpu
  CHECKPOINT:
    DIR: /mnt/vol/gfsai-bistro2-east/ai-group/users/prigoyal/distributed/
    AUTO_RESUME: True
    CHECKPOINT_FREQUENCY: 100
